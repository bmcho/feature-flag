services:
  feature-flag-service:
    image: feature-flag-app:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
      - "9292:9292"
    environment:
      - FEATUREFLAG_ENGINE_HOST=feature-flag-engine
      - FEATUREFLAG_ENGINE_PORT=8013
      - CACHE_TYPE=custom # lru / custom
      - MAX_CACHE_SIZE=10000
    depends_on:
      - feature-flag-engine
    networks:
      - internal_network

  feature-flag-engine:
    image:  ghcr.io/open-feature/flagd:latest
    command: start --uri https://raw.githubusercontent.com/bmcho/public-storage/main/example-flags.json
#    command: start  --uri file:./etc/flagd/example_flags.json
    volumes:
      - ./flagd:/etc/flagd
    ports:
      - "8013:8013"
    stdin_open: true
    tty: true
    networks:
      - internal_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/volume:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always
    networks:
      - internal_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    restart: always
    networks:
      - internal_network

networks:
  internal_network:
    driver: bridge